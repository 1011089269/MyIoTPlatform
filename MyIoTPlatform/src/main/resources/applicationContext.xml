<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    https://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/util
    https://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <!--启动Springmvc注解驱动-->
    <mvc:annotation-driven />

    <!-- 自动扫描指定的包，下面所有注解类交给IOC容器管理 -->
    <context:component-scan base-package="controller, service, entity, config"/>

    <mvc:default-servlet-handler />

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="viewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/" />
        <!-- 后缀 -->
        <property name="suffix" value=".html" />
    </bean>
    <!--配置数据库连接信息   -->
    <util:properties id="jdbc" location="classpath:db.properties"/>
    <bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{jdbc.driver}"/>
        <property name="url" value="#{jdbc.url}"/>
        <property name="username" value="#{jdbc.user}"/>
        <property name="password" value="#{jdbc.pwd}"/>
    </bean>
    <!--配置SqlSessionFactoryBean-->
    <!--定义一些属性来指定Mybatis框架的配置信息 -->
    <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源，注入连接信息-->
        <property name="dataSource" ref="dbcp"/>
        <!--额外的Mybatis配置-->
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <!--用于指定sql定义文件的位置（加classpath从src下找）-->
        <property name="mapperLocations" value="classpath:sql/*.xml"/>
    </bean>
    <!--配置MapperScannerConfigurer-->
    <!--按照指定包扫描接口，批量生成接口实现对象，id为接口名称首字母小写-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定扫描dao包下所有接口-->
        <property name="basePackage" value="dao"/>
        <!--注入sqlSessionFactory,自动注入-->
        <property name="sqlSessionFactoryBeanName" value="ssf"/>
    </bean>
    <!--  配置redis，缓存token  -->
    <bean id="propertyConfigurerRedis" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="order" value="1"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:redisConfig.properties</value>
            </list>
        </property>
    </bean>
    <!--  jedis pool配置  -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    <!--  spring data redis  -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="database" value="${redis.default.db}"/>
        <constructor-arg index="0" ref="jedisPoolConfig"/>
    </bean>
    <!--  Spring类型的RedisTemplate模板  -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <constructor-arg index="0" ref="jedisConnectionFactory"/>
    </bean>
    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/user/**"/>
            <bean class="controller.interceptor.TokenInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置mongo -->
    <mongo:mapping-converter base-package="entity"/>
    <mongo:mongo-client id="mongo" host="localhost" port="27017" credentials="root:13579@admin">
        <mongo:client-options write-concern="NORMAL" />
    </mongo:mongo-client>

    <mongo:db-factory id="mongoDbFactory" dbname="test" mongo-ref="mongo"/>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>
</beans>